name: Terraform Plan and Apply with S3 Backend

on:
  push:
    branches:
      - main

env:
  BUCKET_NAME: terraform-state-asg-dev
  AWS_REGION: us-east-1

jobs:
  create-backend-bucket:
    name: Create S3 Backend Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create S3 bucket if not exists
        run: |
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "âœ… S3 bucket $BUCKET_NAME already exists."
          else
            echo "Creating backend S3 bucket..."
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region "$AWS_REGION"

            aws s3api put-bucket-versioning \
              --bucket "$BUCKET_NAME" \
              --versioning-configuration Status=Enabled

            aws s3api put-bucket-encryption \
              --bucket "$BUCKET_NAME" \
              --server-side-encryption-configuration '{
                "Rules": [
                  {
                    "ApplyServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }'
          fi

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: create-backend-bucket

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="environments/dev.tfvars" -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: ðŸ’° Show Cost Summary
        run: |
          {
            echo "## ðŸ’° Estimated Monthly Costs (Dev Environment)"
            echo ""
            echo "| Resource         | Quantity | Approx Cost |"
            echo "|------------------|----------|--------------|"
            echo "| EC2 Instance     | 1        | ~$8.00       |"
            echo "| EBS Volume (8GB) | 1        | ~$0.64       |"
            echo ""
            echo "**Total:** ~$8.64/month"
          } >> $GITHUB_STEP_SUMMARY

  apply:
    name: Terraform Apply (Manual Approval)
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: dev-approval

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
